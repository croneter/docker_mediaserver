version: "3.7"

services:
  dns-over-https:
    image: dns-over-https:staging
    networks:
      pihole:
    ports:
      - 5053:5053/udp
    environment:
      - TZ=${TZ}
      - TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query
    deploy:
      restart_policy:
        condition: on-failure
  pihole:
    image: pihole/pihole:latest
    networks:
      pihole:
      overlay_network:
    volumes:
      - "${HTPC_CONFIG_DIR}/pihole:/etc/pihole"
      - "${HTPC_CONFIG_DIR}/pihole/log/pihole.log:/var/log/pihole.log"
      - "${HTPC_CONFIG_DIR}/pihole/etc/dnsmasq.d:/etc/dnsmasq.d"
      # allow iFrames even after container-update
      # ("X-Frame-Options" in /etc/lighttpd/lighttpd.conf)
      # See https://github.com/pi-hole/docker-pi-hole/issues/327
      - ./pihole/allow-iframe.sh:/etc/cont-init.d/21-allow-iframe.sh
      - ./pihole/whitelist.sh:/etc/cont-init.d/22-whitelist.sh
    environment:
      - TZ=${TZ}
      - VIRTUAL_HOST=pihole.${HTPC_DOMAIN}
    env_file:
      - pihole.env
    ports:
      - 53:53/udp
      - 53:53/tcp
      # SOME random ports here
      - 8812:443/tcp
      - 8183:80/tcp
    dns:
      # Pihole: first dns must be 127.0.0.1
      - "127.0.0.1"
      # fallback
      - "1.1.1.1"
    deploy:
      mode: replicated
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        # Admin console for pihole - need to hit %/admin
        - traefik.http.routers.pihole.entrypoints=websecure
        - traefik.http.routers.pihole.rule=Host(`pihole.${HTPC_DOMAIN}`)
        - traefik.http.routers.pihole.tls=true
        - traefik.http.routers.pihole.middlewares=auth,pihole-addprefix
        - traefik.http.routers.pihole.service=pihole
        - traefik.http.middlewares.pihole-addprefix.addPrefix.prefix=/admin
        - traefik.http.services.pihole.loadbalancer.server.port=80

networks:
  overlay_network:
    external: true
  pihole:
