version: "3.7"

services:
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.6.2
    # https://github.com/docker/swarmkit/issues/1951
    hostname: "{{.Node.Hostname}}-filebeat"
    # Need to override user so we can access the log files, and docker.sock
    user: root
    volumes:
      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      - filebeat_data:/usr/share/filebeat/data
      # This is needed for filebeat to load container log path as specified in
      # filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # This is needed for filebeat to load logs for system and auth modules
      - /var/log/:/tmp/log:ro
    # disable strict permission checks
    environment:
      LOGSTASH_HOST: http://logstash:5044
      KIBANA_HOST: http://kibana:5601
    # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
    command:
      - "-e"
      - "--strict.perms=false"
    networks:
      - overlay_network
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    volumes:
      -  ./logstash:/usr/share/logstash/pipeline:ro
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - overlay_network
    healthcheck:
      test: bin/logstash -t
      interval: 2m
      timeout: 30s
      retries: 3
      start_period: 1m
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.logstash.entrypoints=websecure
        - traefik.http.routers.logstash.rule=Host(`logstash.${HTPC_DOMAIN}`)
        - traefik.http.routers.logstash.tls=true
        - traefik.http.services.logstash.loadbalancer.server.port=5000
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      node.name: es01
      cluster.name: es-docker-cluster
    networks:
      - overlay_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 2m
      timeout: 10s
      retries: 5
      start_period: 2m
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.elasticsearch.entrypoints=websecure
        - traefik.http.routers.elasticsearch.rule=Host(`elasticsearch.${HTPC_DOMAIN}`)
        - traefik.http.routers.elasticsearch.tls=true
        - traefik.http.services.elasticsearch.loadbalancer.server.port=9200
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    networks:
      - overlay_network
    depends_on:
      - elasticsearch
    environment:
      server.name: kibana
      server.host: "0"
      elasticsearch.hosts: http://elasticsearch:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 2m
      timeout: 10s
      retries: 5
      start_period: 2m
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.kibana.entrypoints=websecure
        - traefik.http.routers.kibana.rule=Host(`kibana.${HTPC_DOMAIN}`)
        - traefik.http.routers.kibana.tls=true
        - traefik.http.services.kibana.loadbalancer.server.port=5601

volumes:
  elasticsearch_data:
    driver: local
  filebeat_data:
    driver: local

networks:
  overlay_network:
    external: true
